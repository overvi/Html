{"version":3,"file":"log.bundle.js","mappings":"mBACAA,SAASC,iBAAiB,oBAAoB,KAC1C,MAAMC,EAAYF,SAASG,cAAc,kBACnCC,EAAaJ,SAASK,eAAe,cACrCC,EAAYN,SAASK,eAAe,mBACpCE,EAAO,CACT,CACIC,UAAW,YACXC,MAAO,mCACPC,YAAa,iBACbC,aAAc,qCACdC,OAAQ,qBACRC,QAAS,gCACTC,OAAQ,YACRC,SAAU,4BACVC,QAAS,qHAEb,CACIR,UAAW,YACXC,MAAO,kCACPC,YAAa,kBACbC,aAAc,qCACdC,OAAQ,qBACRC,QAAS,0BACTC,OAAQ,YACRC,SAAU,4BACVC,QAAS,qHAEb,CACIR,UAAW,YACXC,MAAO,mCACPC,YAAa,iBACbC,aAAc,qCACdC,OAAQ,qBACRC,QAAS,gCACTC,OAAQ,YACRC,SAAU,4BACVC,QAAS,qHAEb,CACIR,UAAW,YACXC,MAAO,kCACPC,YAAa,kBACbC,aAAc,qCACdC,OAAQ,qBACRC,QAAS,0BACTC,OAAQ,YACRC,SAAU,4BACVC,QAAS,qHAEb,CACIR,UAAW,YACXC,MAAO,mCACPC,YAAa,iBACbC,aAAc,qCACdC,OAAQ,qBACRC,QAAS,gCACTC,OAAQ,YACRC,SAAU,4BACVC,QAAS,qHAEb,CACIR,UAAW,YACXC,MAAO,kCACPC,YAAa,kBACbC,aAAc,qCACdC,OAAQ,qBACRC,QAAS,0BACTC,OAAQ,YACRC,SAAU,4BACVC,QAAS,sHAGjB,IAAIC,EAAc,EACdC,EAAc,EACdC,EAAaC,KAAKC,KAAKd,EAAKe,OAASL,GAWzC,SAASM,EAAaC,GAClB,IAAKtB,EACD,OACJA,EAAUuB,UAAY,GACtB,MAAMC,GAASF,EAAO,GAAKP,EACrBU,EAAMD,EAAQT,EACEV,EAAKqB,MAAMF,EAAOC,GAC1BE,SAASC,IACnB,MAAMC,EAAK/B,SAASgC,cAAc,MAClCD,EAAGN,UAAY,0CACYK,EAAItB,8EACJsB,EAAIrB,wDACJqB,EAAIpB,8DACJoB,EAAInB,+DACJmB,EAAIlB,2DACFkB,EAAIjB,uVAIjBiB,EAAIhB,qGAGIgB,EAAIf,uGAEWe,EAAId,yDAG3Cd,EAAU+B,YAAYF,EAAG,IAIjC,SAA0BP,GACtB,IAAKpB,EACD,OACJA,EAAWqB,UAAY,GAEvB,MAAMS,EAAOlC,SAASG,cAAc,eACpC+B,EAAKC,UAAUC,IAAI,mBACN,IAATZ,GACAU,EAAKC,UAAUC,IAAI,YACvBF,EAAKjC,iBAAiB,SAAS,KACvBiB,EAAc,IACdA,IACAK,EAAaL,GACjB,IAGJ,IAAK,IAAImB,EAAI,EAAGA,GAAKlB,EAAYkB,IAAK,CAClC,MAAMC,EAAKtC,SAASgC,cAAc,MAClCM,EAAGb,UAAY,8BACAY,IAAMb,EACf,uDACA,uHACYa,uCAGlBC,EAAGH,UAAUC,IAAI,mBACjBE,EAAGrC,iBAAiB,SAAS,KACzBiB,EAAcmB,EACdd,EAAaL,EAAY,IAE7Bd,EAAW6B,YAAYK,EAC3B,CACA,MAAMC,EAAOvC,SAASG,cAAc,eACpCoC,EAAKJ,UAAUC,IAAI,mBACfZ,IAASL,GACToB,EAAKJ,UAAUC,IAAI,YACvBG,EAAKtC,iBAAiB,SAAS,KACvBiB,EAAcC,IACdD,IACAK,EAAaL,GACjB,GAER,CA5CIsB,CAAiBhB,EACrB,CAxCAlB,EAAUL,iBAAiB,UAAWwC,IAClC,MAAMC,EAASD,EAAEC,OACjBzB,EAAc0B,SAASD,EAAOE,OAC9B1B,EAAc,EAKdC,EAAaC,KAAKC,KAAKd,EAAKe,OAASL,GAHrCM,EAAaL,EAAY,IA+E7BK,EAAaL,EAAY,G","sources":["webpack:///./src/ts/log.ts"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const tableBody = document.querySelector(\"#myTable tbody\");\n    const pagination = document.getElementById(\"pagination\");\n    const selectRow = document.getElementById(\"selectRowInpage\");\n    const data = [\n        {\n            bookingId: \"778899001\",\n            hotel: \"هتل اسپیناس Deluxe Room - Triple\",\n            bookingDate: \"1403/03/8 7:44\",\n            stayDuration: \"1403/03/8 1403/03/10 یک اتاق دو شب\",\n            guests: \"test testt 2 مهمان\",\n            payment: \"غیر قابل استرداد<br>137.5 USD\",\n            status: \"تایید شده\",\n            provider: \"چارتر کننده API interface\",\n            actions: '<a href=\"\" class=\"underline text-orange-400\">جزییات</a><br><a href=\"\" class=\"underline text-green-400\">پرداخت</a>',\n        },\n        {\n            bookingId: \"778899010\",\n            hotel: \"هتل اسپیناس Deluxe Room - Suite\",\n            bookingDate: \"1403/03/8 11:00\",\n            stayDuration: \"1403/03/8 1403/03/10 یک اتاق دو شب\",\n            guests: \"test testt 4 مهمان\",\n            payment: \"قابل استرداد<br>200 USD\",\n            status: \"تایید شده\",\n            provider: \"چارتر کننده API interface\",\n            actions: '<a href=\"\" class=\"underline text-orange-400\">جزییات</a><br><a href=\"\" class=\"underline text-green-400\">پرداخت</a>',\n        },\n        {\n            bookingId: \"778899001\",\n            hotel: \"هتل اسپیناس Deluxe Room - Triple\",\n            bookingDate: \"1403/03/8 7:44\",\n            stayDuration: \"1403/03/8 1403/03/10 یک اتاق دو شب\",\n            guests: \"test testt 2 مهمان\",\n            payment: \"غیر قابل استرداد<br>137.5 USD\",\n            status: \"تایید شده\",\n            provider: \"چارتر کننده API interface\",\n            actions: '<a href=\"\" class=\"underline text-orange-400\">جزییات</a><br><a href=\"\" class=\"underline text-green-400\">پرداخت</a>',\n        },\n        {\n            bookingId: \"778899010\",\n            hotel: \"هتل اسپیناس Deluxe Room - Suite\",\n            bookingDate: \"1403/03/8 11:00\",\n            stayDuration: \"1403/03/8 1403/03/10 یک اتاق دو شب\",\n            guests: \"test testt 4 مهمان\",\n            payment: \"قابل استرداد<br>200 USD\",\n            status: \"تایید شده\",\n            provider: \"چارتر کننده API interface\",\n            actions: '<a href=\"\" class=\"underline text-orange-400\">جزییات</a><br><a href=\"\" class=\"underline text-green-400\">پرداخت</a>',\n        },\n        {\n            bookingId: \"778899001\",\n            hotel: \"هتل اسپیناس Deluxe Room - Triple\",\n            bookingDate: \"1403/03/8 7:44\",\n            stayDuration: \"1403/03/8 1403/03/10 یک اتاق دو شب\",\n            guests: \"test testt 2 مهمان\",\n            payment: \"غیر قابل استرداد<br>137.5 USD\",\n            status: \"تایید شده\",\n            provider: \"چارتر کننده API interface\",\n            actions: '<a href=\"\" class=\"underline text-orange-400\">جزییات</a><br><a href=\"\" class=\"underline text-green-400\">پرداخت</a>',\n        },\n        {\n            bookingId: \"778899010\",\n            hotel: \"هتل اسپیناس Deluxe Room - Suite\",\n            bookingDate: \"1403/03/8 11:00\",\n            stayDuration: \"1403/03/8 1403/03/10 یک اتاق دو شب\",\n            guests: \"test testt 4 مهمان\",\n            payment: \"قابل استرداد<br>200 USD\",\n            status: \"تایید شده\",\n            provider: \"چارتر کننده API interface\",\n            actions: '<a href=\"\" class=\"underline text-orange-400\">جزییات</a><br><a href=\"\" class=\"underline text-green-400\">پرداخت</a>',\n        },\n    ];\n    let rowsPerPage = 5;\n    let currentPage = 1;\n    let totalPages = Math.ceil(data.length / rowsPerPage);\n    selectRow.addEventListener(\"change\", (v) => {\n        const target = v.target;\n        rowsPerPage = parseInt(target.value);\n        currentPage = 1;\n        updateTotalPages();\n        displayTable(currentPage);\n    });\n    function updateTotalPages() {\n        totalPages = Math.ceil(data.length / rowsPerPage);\n    }\n    function displayTable(page) {\n        if (!tableBody)\n            return;\n        tableBody.innerHTML = \"\";\n        const start = (page - 1) * rowsPerPage;\n        const end = start + rowsPerPage;\n        const paginatedData = data.slice(start, end);\n        paginatedData.forEach((row) => {\n            const tr = document.createElement(\"tr\");\n            tr.innerHTML = `\r\n                  <td><p class=\"p-4\">${row.bookingId}<br />hjk-78579 --</p></td>\r\n                  <td><p class=\"p-4\">${row.hotel}</p></td>\r\n                  <td><p class=\"p-4\">${row.bookingDate}</p></td>\r\n                  <td><p class=\"p-4\">${row.stayDuration}</p></td>\r\n                  <td><p class=\"p-4\">${row.guests}</p></td>\r\n                  <td><div class=\"p-4\">${row.payment}</div></td>\r\n                  <td class=\"p-5\">\r\n                      <span class=\"rounded-full items-center gap-2 flex text-nowrap p-1 px-2 text-green-600 border border-green-600 bg-green-400/20 m-auto ml-10 w-fit\">\r\n                          <span class=\"size-2 bg-green-600 block rounded-full\"></span>\r\n                          ${row.status}\r\n                      </span>\r\n                  </td>\r\n                  <td class=\"p-4\">${row.provider}</td>\r\n                  <td class=\"p-4\">\r\n                      <div class=\"flex flex-col\">${row.actions}</div>\r\n                  </td>\r\n              `;\n            tableBody.appendChild(tr);\n        });\n        updatePagination(page);\n    }\n    function updatePagination(page) {\n        if (!pagination)\n            return;\n        pagination.innerHTML = \"\"; // Clear existing pagination\n        // Create previous button\n        const prev = document.querySelector(\".prev-table\");\n        prev.classList.add(\"pagination-item\");\n        if (page === 1)\n            prev.classList.add(\"disabled\");\n        prev.addEventListener(\"click\", () => {\n            if (currentPage > 1) {\n                currentPage--;\n                displayTable(currentPage);\n            }\n        });\n        // Create page numbers\n        for (let i = 1; i <= totalPages; i++) {\n            const li = document.createElement(\"li\");\n            li.innerHTML = `\r\n          <button class=\"${i === page\n                ? \"rounded-full px-3  bg-orange-400 text-white border-0\"\n                : \"rounded-full px-3  border-0 shadow-xl\"} py-0 flex items-center justify-center button\">\r\n            <p class=\"mt-1\">${i}</p>\r\n          </button>\r\n        `;\n            li.classList.add(\"pagination-item\");\n            li.addEventListener(\"click\", () => {\n                currentPage = i;\n                displayTable(currentPage);\n            });\n            pagination.appendChild(li);\n        }\n        const next = document.querySelector(\".next-table\");\n        next.classList.add(\"pagination-item\");\n        if (page === totalPages)\n            next.classList.add(\"disabled\");\n        next.addEventListener(\"click\", () => {\n            if (currentPage < totalPages) {\n                currentPage++;\n                displayTable(currentPage);\n            }\n        });\n    }\n    displayTable(currentPage);\n});\n"],"names":["document","addEventListener","tableBody","querySelector","pagination","getElementById","selectRow","data","bookingId","hotel","bookingDate","stayDuration","guests","payment","status","provider","actions","rowsPerPage","currentPage","totalPages","Math","ceil","length","displayTable","page","innerHTML","start","end","slice","forEach","row","tr","createElement","appendChild","prev","classList","add","i","li","next","updatePagination","v","target","parseInt","value"],"sourceRoot":""}